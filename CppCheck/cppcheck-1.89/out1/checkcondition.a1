<?xml version="1.0"?>
<analyzerinfo checksum="594688958">
        <error id="missingOverride" severity="style" msg="The function &apos;AddResults&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;AddResults&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\timer.h" line="64" column="10" info="Function in derived class"/>
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\timer.h" line="40" column="18" info="Virtual function in base class"/>
            <symbol>AddResults</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;runChecks&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;runChecks&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" line="54" column="10" info="Function in derived class"/>
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" line="71" column="18" info="Virtual function in base class"/>
            <symbol>runChecks</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getErrorMessages&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getErrorMessages&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" line="160" column="10" info="Function in derived class"/>
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" line="74" column="18" info="Virtual function in base class"/>
            <symbol>getErrorMessages</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;classInfo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;classInfo&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier.">
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" line="188" column="17" info="Function in derived class"/>
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" line="82" column="25" info="Virtual function in base class"/>
            <symbol>classInfo</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398">
            <location file0="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" file="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" line="734" column="109"/>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1131:10" call-funcname="setFlag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="455" call-argexpr="b" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\token.h" linenr="707" info="Calling function 'isStandardType', 1st argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:619:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="628" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="706" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:454:10" call-funcname="isStandardType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="707" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="833" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="138" call-argexpr="inconclusive" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" linenr="131" info="Calling function 'reportError', 6th argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="144" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" call-funcname="assignIfParseScope" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="114" call-argexpr="num" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="111" info="Assuming that condition 'num<0' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="338" call-argexpr="op=="=="?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="344" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="346" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="356" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="360" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="388" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="411" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:145:6" call-funcname="isVariableChanged" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="456" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="464" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="168" info="Calling function 'duplicateConditionError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="514" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="683" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="700" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="797" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="798" info="Assuming that condition 'tok2?tok2->expressionString():"!x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="812" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="813" info="Assuming that condition 'tok2?tok2->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" call-argexpr="cond1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="827" info="Assuming that condition 'cond1?cond1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&not_" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="not_" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&op" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&value" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&expr" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1029" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:147:10" call-funcname="redundantConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1058" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&not1" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="not1" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&op1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&value1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&expr1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&not2" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="not2" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&op2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&value2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&expr2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1094" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1104" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1278" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1291" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1293" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1336" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:165:15" call-funcname="getErrorPath" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1445" call-argexpr="tok" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="178" info="Calling function 'alwaysTrueFalseError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1485" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1487" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="316" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:315:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="324" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:323:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="329" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:328:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="337" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:336:24" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="342" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:341:41" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="349" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:348:49" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="354" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:353:31" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:618:25" call-funcname="findsimplematch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="625" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:624:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:630:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:130:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:661:10" call-funcname="evaluate" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h" linenr="235" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:223:5" my-argnr="8"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" call-funcname="mismatchingBitAndError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="159" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:505:14" my-argnr="1" my-argname="s" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="506" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:508:14" my-argnr="1" my-argname="e" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="509" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1204:17" my-argnr="1" my-argname="sep" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="1210" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" my-argnr="2" my-argname="not1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="922" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="2" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="3" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:249:13" my-argnr="1" my-argname="tok" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="251" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:138:10" my-argnr="1" my-argname="ifCond" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="534" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:970:20" my-argnr="2" my-argname="expr1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="972" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1131:10" call-funcname="setFlag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="455" call-argexpr="b" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\token.h" linenr="707" info="Calling function 'isStandardType', 1st argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:619:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="628" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="706" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:454:10" call-funcname="isStandardType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="707" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="833" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="138" call-argexpr="inconclusive" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" linenr="131" info="Calling function 'reportError', 6th argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="144" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" call-funcname="assignIfParseScope" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="114" call-argexpr="num" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="111" info="Assuming that condition 'num<0' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="338" call-argexpr="op=="=="?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="344" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="346" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="356" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="360" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="388" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="411" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:145:6" call-funcname="isVariableChanged" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="456" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="464" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="168" info="Calling function 'duplicateConditionError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="514" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="683" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="700" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="797" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="798" info="Assuming that condition 'tok2?tok2->expressionString():"!x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="812" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="813" info="Assuming that condition 'tok2?tok2->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" call-argexpr="cond1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="827" info="Assuming that condition 'cond1?cond1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&not_" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="not_" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&op" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&value" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&expr" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1029" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:147:10" call-funcname="redundantConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1058" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&not1" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="not1" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&op1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&value1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&expr1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&not2" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="not2" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&op2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&value2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&expr2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1094" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1104" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1278" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1291" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1293" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1336" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:165:15" call-funcname="getErrorPath" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1445" call-argexpr="tok" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="178" info="Calling function 'alwaysTrueFalseError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1485" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1487" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="316" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:315:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="324" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:323:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="329" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:328:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="337" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:336:24" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="342" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:341:41" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="349" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:348:49" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="354" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:353:31" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:618:25" call-funcname="findsimplematch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="625" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:624:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:630:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:130:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:661:10" call-funcname="evaluate" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h" linenr="235" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:223:5" my-argnr="8"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" call-funcname="mismatchingBitAndError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="159" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:505:14" my-argnr="1" my-argname="s" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="506" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:508:14" my-argnr="1" my-argname="e" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="509" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1204:17" my-argnr="1" my-argname="sep" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="1210" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" my-argnr="2" my-argname="not1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="922" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="2" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="3" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:249:13" my-argnr="1" my-argname="tok" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="251" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:138:10" my-argnr="1" my-argname="ifCond" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="534" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:970:20" my-argnr="2" my-argname="expr1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="972" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1131:10" call-funcname="setFlag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="455" call-argexpr="b" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\token.h" linenr="707" info="Calling function 'isStandardType', 1st argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:619:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="628" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="706" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:454:10" call-funcname="isStandardType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="707" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="833" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="138" call-argexpr="inconclusive" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" linenr="131" info="Calling function 'reportError', 6th argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="144" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" call-funcname="assignIfParseScope" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="114" call-argexpr="num" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="111" info="Assuming that condition 'num<0' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="338" call-argexpr="op=="=="?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="344" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="346" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="356" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="360" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="388" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="411" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:145:6" call-funcname="isVariableChanged" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="456" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="464" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="168" info="Calling function 'duplicateConditionError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="514" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="683" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="700" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="797" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="798" info="Assuming that condition 'tok2?tok2->expressionString():"!x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="812" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="813" info="Assuming that condition 'tok2?tok2->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" call-argexpr="cond1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="827" info="Assuming that condition 'cond1?cond1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&not_" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="not_" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&op" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&value" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&expr" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1029" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:147:10" call-funcname="redundantConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1058" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&not1" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="not1" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&op1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&value1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&expr1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&not2" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="not2" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&op2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&value2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&expr2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1094" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1104" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1278" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1291" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1293" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1336" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:165:15" call-funcname="getErrorPath" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1445" call-argexpr="tok" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="178" info="Calling function 'alwaysTrueFalseError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1485" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1487" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="316" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:315:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="324" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:323:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="329" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:328:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="337" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:336:24" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="342" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:341:41" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="349" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:348:49" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="354" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:353:31" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:618:25" call-funcname="findsimplematch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="625" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:624:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:630:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:130:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:661:10" call-funcname="evaluate" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h" linenr="235" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:223:5" my-argnr="8"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" call-funcname="mismatchingBitAndError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="159" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:505:14" my-argnr="1" my-argname="s" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="506" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:508:14" my-argnr="1" my-argname="e" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="509" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1204:17" my-argnr="1" my-argname="sep" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="1210" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" my-argnr="2" my-argname="not1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="922" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="2" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="3" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:249:13" my-argnr="1" my-argname="tok" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="251" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:138:10" my-argnr="1" my-argname="ifCond" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="534" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:970:20" my-argnr="2" my-argname="expr1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="972" value="0"/>
  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1131:10" call-funcname="setFlag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="455" call-argexpr="b" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\token.h" linenr="707" info="Calling function 'isStandardType', 1st argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:619:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="628" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" call-argexpr="varId" call-argvaluetype="0" call-argvalue="0" warning="true"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="706" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:454:10" call-funcname="isStandardType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="707" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:349:10" call-funcname="tokType" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="833" call-argexpr="eVariable" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="138" call-argexpr="inconclusive" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\check.h" linenr="131" info="Calling function 'reportError', 6th argument 'false' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:149:10" call-funcname="reportError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="144" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" call-funcname="assignIfParseScope" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="114" call-argexpr="num" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="111" info="Assuming that condition 'num<0' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="338" call-argexpr="op=="=="?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="344" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="346" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="356" call-argexpr="or_equal?true:false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:130:10" call-funcname="comparisonError" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="360" call-argexpr="or_equal?false:true" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="388" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="411" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:145:6" call-funcname="isVariableChanged" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="456" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="464" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="168" info="Calling function 'duplicateConditionError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="514" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="680" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="683" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="700" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="797" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="798" info="Assuming that condition 'tok2?tok2->expressionString():"!x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="812" info="Assuming that condition 'tok1?tok1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" call-argexpr="tok2" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="813" info="Assuming that condition 'tok2?tok2->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" call-argexpr="cond1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="827" info="Assuming that condition 'cond1?cond1->expressionString():"x"' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&not_" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="not_" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&op" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&value" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&expr" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="994" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1029" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:147:10" call-funcname="redundantConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1058" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&not1" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="not1" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&op1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&value1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&expr1" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1078" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&not2" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="not2" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&op2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="4" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&value2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="5" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&expr2" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" call-funcname="parseComparison" call-argnr="6" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1084" call-argexpr="&inconclusive" call-argvaluetype="7" call-argvalue="1"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:110:6" call-funcname="isOppositeCond" call-argnr="8" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1094" call-argexpr="&errorPath" call-argvaluetype="7" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1104" call-argexpr="comp1" call-argvaluetype="0" call-argvalue="0" warning="true">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.cpp" linenr="1065" info="Assuming that condition 'comp1' is not redundant"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1278" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1291" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:151:10" call-funcname="clarifyConditionError" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1293" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1336" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:165:15" call-funcname="getErrorPath" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1445" call-argexpr="tok" call-argvaluetype="0" call-argvalue="0">
  <path filename="C:\Users\Sau\Desktop\cppcheck-1.89\lib\checkcondition.h" linenr="178" info="Calling function 'alwaysTrueFalseError', 1st argument 'nullptr' value is 0"/>
</function-call><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1485" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/astutils.h:95:6" call-funcname="isSameExpression" call-argnr="7" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="1487" call-argexpr="false" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="316" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:315:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="324" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:323:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="329" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:328:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="337" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:336:24" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="342" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:341:41" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="349" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:348:49" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:558:28" call-funcname="getarg" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="354" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:353:31" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:618:25" call-funcname="findsimplematch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="625" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:624:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:620:25" call-funcname="findmatch" call-argnr="3" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="631" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:630:19" my-argnr="3"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:136:10" call-funcname="reportError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h" linenr="131" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/check.h:130:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:661:10" call-funcname="evaluate" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h" linenr="235" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/symboldatabase.h:223:5" my-argnr="8"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" call-funcname="mismatchingBitAndError" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="159" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:75:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="471" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:136:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="795" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:140:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="810" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:142:10" my-argnr="2"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="1"/>
<function-call call-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:124:10" call-funcname="diag" call-argnr="1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="825" my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:144:10" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:505:14" my-argnr="1" my-argname="s" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="506" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:508:14" my-argnr="1" my-argname="e" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="509" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h:1204:17" my-argnr="1" my-argname="sep" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/token.h" linenr="1210" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:920:13" my-argnr="2" my-argname="not1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="922" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:149:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="150" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h:157:17" my-argnr="1" my-argname="func" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/library.h" linenr="158" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:127:10" my-argnr="2" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="226" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="1" my-argname="tok1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:128:10" my-argnr="3" my-argname="tok2" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="236" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:249:13" my-argnr="1" my-argname="tok" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="251" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.h:138:10" my-argnr="1" my-argname="ifCond" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="534" value="0"/>
    <unsafe-usage my-id="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp:970:20" my-argnr="2" my-argname="expr1" filename="C:/Users/Sau/Desktop/cppcheck-1.89/lib/checkcondition.cpp" linenr="972" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="diag" lineNumber="54"/>
    <functiondecl functionName="isAliased" lineNumber="66"/>
    <functiondecl functionName="assignIf" lineNumber="75"/>
    <functiondecl functionName="isParameterChanged" lineNumber="119"/>
    <functiondecl functionName="assignIfParseScope" lineNumber="146"/>
    <functiondecl functionName="assignIfError" lineNumber="224"/>
    <functiondecl functionName="mismatchingBitAndError" lineNumber="234"/>
    <functiondecl functionName="getnumchildren" lineNumber="249"/>
    <functiondecl functionName="inBooleanFunction" lineNumber="262"/>
    <functiondecl functionName="checkBadBitmaskCheck" lineNumber="279"/>
    <functiondecl functionName="badBitmaskCheckError" lineNumber="302"/>
    <functiondecl functionName="comparison" lineNumber="307"/>
    <functiondecl functionName="comparisonError" lineNumber="368"/>
    <functiondecl functionName="isOverlappingCond" lineNumber="382"/>
    <functiondecl functionName="duplicateCondition" lineNumber="423"/>
    <functiondecl functionName="duplicateConditionError" lineNumber="469"/>
    <functiondecl functionName="multiCondition" lineNumber="481"/>
    <functiondecl functionName="overlappingElseIfConditionError" lineNumber="521"/>
    <functiondecl functionName="oppositeElseIfConditionError" lineNumber="530"/>
    <functiondecl functionName="isNonConstFunctionCall" lineNumber="548"/>
    <functiondecl functionName="multiCondition2" lineNumber="564"/>
    <functiondecl functionName="innerSmtString" lineNumber="781"/>
    <functiondecl functionName="oppositeInnerConditionError" lineNumber="793"/>
    <functiondecl functionName="identicalInnerConditionError" lineNumber="808"/>
    <functiondecl functionName="identicalConditionAfterEarlyExitError" lineNumber="823"/>
    <functiondecl functionName="invertOperatorForOperandSwap" lineNumber="851"/>
    <functiondecl functionName="checkFloatRelation" lineNumber="871"/>
    <functiondecl functionName="getvalue3 &lt; double &gt;" lineNumber="890"/>
    <functiondecl functionName="parseComparison" lineNumber="920"/>
    <functiondecl functionName="conditionString" lineNumber="970"/>
    <functiondecl functionName="conditionString" lineNumber="985"/>
    <functiondecl functionName="checkIncorrectLogicOperator" lineNumber="1007"/>
    <functiondecl functionName="incorrectLogicOperatorError" lineNumber="1183"/>
    <functiondecl functionName="redundantConditionError" lineNumber="1198"/>
    <functiondecl functionName="checkModuloAlwaysTrueFalse" lineNumber="1206"/>
    <functiondecl functionName="moduloAlwaysTrueFalseError" lineNumber="1234"/>
    <functiondecl functionName="countPar" lineNumber="1240"/>
    <functiondecl functionName="clarifyCondition" lineNumber="1258"/>
    <functiondecl functionName="clarifyConditionError" lineNumber="1299"/>
    <functiondecl functionName="alwaysTrueFalse" lineNumber="1322"/>
    <functiondecl functionName="alwaysTrueFalseError" lineNumber="1440"/>
    <functiondecl functionName="checkInvalidTestForOverflow" lineNumber="1453"/>
    <functiondecl functionName="invalidTestForOverflow" lineNumber="1504"/>
    <functiondecl functionName="checkPointerAdditionResultNotNull" lineNumber="1515"/>
    <functiondecl functionName="pointerAdditionResultNotNullError" lineNumber="1554"/>
    <functiondecl functionName="checkDuplicateConditionalAssign" lineNumber="1560"/>
    <functiondecl functionName="duplicateConditionalAssignError" lineNumber="1596"/>
    <functiondecl functionName="getvalue &lt; double &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; unsignedlong long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; long long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue3 &lt; unsignedlong long &gt;" lineNumber="880"/>
    <functiondecl functionName="getvalue3 &lt; long long &gt;" lineNumber="880"/>
    <functiondecl functionName="diag" lineNumber="54"/>
    <functiondecl functionName="isAliased" lineNumber="66"/>
    <functiondecl functionName="assignIf" lineNumber="75"/>
    <functiondecl functionName="isParameterChanged" lineNumber="119"/>
    <functiondecl functionName="assignIfParseScope" lineNumber="146"/>
    <functiondecl functionName="assignIfError" lineNumber="224"/>
    <functiondecl functionName="mismatchingBitAndError" lineNumber="234"/>
    <functiondecl functionName="getnumchildren" lineNumber="249"/>
    <functiondecl functionName="inBooleanFunction" lineNumber="262"/>
    <functiondecl functionName="checkBadBitmaskCheck" lineNumber="279"/>
    <functiondecl functionName="badBitmaskCheckError" lineNumber="302"/>
    <functiondecl functionName="comparison" lineNumber="307"/>
    <functiondecl functionName="comparisonError" lineNumber="368"/>
    <functiondecl functionName="isOverlappingCond" lineNumber="382"/>
    <functiondecl functionName="duplicateCondition" lineNumber="423"/>
    <functiondecl functionName="duplicateConditionError" lineNumber="469"/>
    <functiondecl functionName="multiCondition" lineNumber="481"/>
    <functiondecl functionName="overlappingElseIfConditionError" lineNumber="521"/>
    <functiondecl functionName="oppositeElseIfConditionError" lineNumber="530"/>
    <functiondecl functionName="isNonConstFunctionCall" lineNumber="548"/>
    <functiondecl functionName="multiCondition2" lineNumber="564"/>
    <functiondecl functionName="innerSmtString" lineNumber="781"/>
    <functiondecl functionName="oppositeInnerConditionError" lineNumber="793"/>
    <functiondecl functionName="identicalInnerConditionError" lineNumber="808"/>
    <functiondecl functionName="identicalConditionAfterEarlyExitError" lineNumber="823"/>
    <functiondecl functionName="invertOperatorForOperandSwap" lineNumber="851"/>
    <functiondecl functionName="checkFloatRelation" lineNumber="871"/>
    <functiondecl functionName="getvalue3 &lt; double &gt;" lineNumber="890"/>
    <functiondecl functionName="parseComparison" lineNumber="920"/>
    <functiondecl functionName="conditionString" lineNumber="970"/>
    <functiondecl functionName="conditionString" lineNumber="985"/>
    <functiondecl functionName="checkIncorrectLogicOperator" lineNumber="1007"/>
    <functiondecl functionName="incorrectLogicOperatorError" lineNumber="1183"/>
    <functiondecl functionName="redundantConditionError" lineNumber="1198"/>
    <functiondecl functionName="checkModuloAlwaysTrueFalse" lineNumber="1206"/>
    <functiondecl functionName="moduloAlwaysTrueFalseError" lineNumber="1234"/>
    <functiondecl functionName="countPar" lineNumber="1240"/>
    <functiondecl functionName="clarifyCondition" lineNumber="1258"/>
    <functiondecl functionName="clarifyConditionError" lineNumber="1299"/>
    <functiondecl functionName="alwaysTrueFalse" lineNumber="1322"/>
    <functiondecl functionName="alwaysTrueFalseError" lineNumber="1440"/>
    <functiondecl functionName="checkInvalidTestForOverflow" lineNumber="1453"/>
    <functiondecl functionName="invalidTestForOverflow" lineNumber="1504"/>
    <functiondecl functionName="checkPointerAdditionResultNotNull" lineNumber="1515"/>
    <functiondecl functionName="pointerAdditionResultNotNullError" lineNumber="1554"/>
    <functiondecl functionName="checkDuplicateConditionalAssign" lineNumber="1560"/>
    <functiondecl functionName="duplicateConditionalAssignError" lineNumber="1596"/>
    <functiondecl functionName="getvalue &lt; double &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; unsignedlong long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; long long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue3 &lt; unsignedlong long &gt;" lineNumber="880"/>
    <functiondecl functionName="getvalue3 &lt; long long &gt;" lineNumber="880"/>
    <functiondecl functionName="diag" lineNumber="54"/>
    <functiondecl functionName="isAliased" lineNumber="66"/>
    <functiondecl functionName="assignIf" lineNumber="75"/>
    <functiondecl functionName="isParameterChanged" lineNumber="119"/>
    <functiondecl functionName="assignIfParseScope" lineNumber="146"/>
    <functiondecl functionName="assignIfError" lineNumber="224"/>
    <functiondecl functionName="mismatchingBitAndError" lineNumber="234"/>
    <functiondecl functionName="getnumchildren" lineNumber="249"/>
    <functiondecl functionName="inBooleanFunction" lineNumber="262"/>
    <functiondecl functionName="checkBadBitmaskCheck" lineNumber="279"/>
    <functiondecl functionName="badBitmaskCheckError" lineNumber="302"/>
    <functiondecl functionName="comparison" lineNumber="307"/>
    <functiondecl functionName="comparisonError" lineNumber="368"/>
    <functiondecl functionName="isOverlappingCond" lineNumber="382"/>
    <functiondecl functionName="duplicateCondition" lineNumber="423"/>
    <functiondecl functionName="duplicateConditionError" lineNumber="469"/>
    <functiondecl functionName="multiCondition" lineNumber="481"/>
    <functiondecl functionName="overlappingElseIfConditionError" lineNumber="521"/>
    <functiondecl functionName="oppositeElseIfConditionError" lineNumber="530"/>
    <functiondecl functionName="isNonConstFunctionCall" lineNumber="548"/>
    <functiondecl functionName="multiCondition2" lineNumber="564"/>
    <functiondecl functionName="innerSmtString" lineNumber="781"/>
    <functiondecl functionName="oppositeInnerConditionError" lineNumber="793"/>
    <functiondecl functionName="identicalInnerConditionError" lineNumber="808"/>
    <functiondecl functionName="identicalConditionAfterEarlyExitError" lineNumber="823"/>
    <functiondecl functionName="invertOperatorForOperandSwap" lineNumber="851"/>
    <functiondecl functionName="checkFloatRelation" lineNumber="871"/>
    <functiondecl functionName="getvalue3 &lt; double &gt;" lineNumber="890"/>
    <functiondecl functionName="parseComparison" lineNumber="920"/>
    <functiondecl functionName="conditionString" lineNumber="970"/>
    <functiondecl functionName="conditionString" lineNumber="985"/>
    <functiondecl functionName="checkIncorrectLogicOperator" lineNumber="1007"/>
    <functiondecl functionName="incorrectLogicOperatorError" lineNumber="1183"/>
    <functiondecl functionName="redundantConditionError" lineNumber="1198"/>
    <functiondecl functionName="checkModuloAlwaysTrueFalse" lineNumber="1206"/>
    <functiondecl functionName="moduloAlwaysTrueFalseError" lineNumber="1234"/>
    <functiondecl functionName="countPar" lineNumber="1240"/>
    <functiondecl functionName="clarifyCondition" lineNumber="1258"/>
    <functiondecl functionName="clarifyConditionError" lineNumber="1299"/>
    <functiondecl functionName="alwaysTrueFalse" lineNumber="1322"/>
    <functiondecl functionName="alwaysTrueFalseError" lineNumber="1440"/>
    <functiondecl functionName="checkInvalidTestForOverflow" lineNumber="1453"/>
    <functiondecl functionName="invalidTestForOverflow" lineNumber="1504"/>
    <functiondecl functionName="checkPointerAdditionResultNotNull" lineNumber="1515"/>
    <functiondecl functionName="pointerAdditionResultNotNullError" lineNumber="1554"/>
    <functiondecl functionName="checkDuplicateConditionalAssign" lineNumber="1560"/>
    <functiondecl functionName="duplicateConditionalAssignError" lineNumber="1596"/>
    <functiondecl functionName="getvalue &lt; double &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; unsignedlong long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; long long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue3 &lt; unsignedlong long &gt;" lineNumber="880"/>
    <functiondecl functionName="getvalue3 &lt; long long &gt;" lineNumber="880"/>
    <functiondecl functionName="diag" lineNumber="54"/>
    <functiondecl functionName="isAliased" lineNumber="66"/>
    <functiondecl functionName="assignIf" lineNumber="75"/>
    <functiondecl functionName="isParameterChanged" lineNumber="119"/>
    <functiondecl functionName="assignIfParseScope" lineNumber="146"/>
    <functiondecl functionName="assignIfError" lineNumber="224"/>
    <functiondecl functionName="mismatchingBitAndError" lineNumber="234"/>
    <functiondecl functionName="getnumchildren" lineNumber="249"/>
    <functiondecl functionName="inBooleanFunction" lineNumber="262"/>
    <functiondecl functionName="checkBadBitmaskCheck" lineNumber="279"/>
    <functiondecl functionName="badBitmaskCheckError" lineNumber="302"/>
    <functiondecl functionName="comparison" lineNumber="307"/>
    <functiondecl functionName="comparisonError" lineNumber="368"/>
    <functiondecl functionName="isOverlappingCond" lineNumber="382"/>
    <functiondecl functionName="duplicateCondition" lineNumber="423"/>
    <functiondecl functionName="duplicateConditionError" lineNumber="469"/>
    <functiondecl functionName="multiCondition" lineNumber="481"/>
    <functiondecl functionName="overlappingElseIfConditionError" lineNumber="521"/>
    <functiondecl functionName="oppositeElseIfConditionError" lineNumber="530"/>
    <functiondecl functionName="isNonConstFunctionCall" lineNumber="548"/>
    <functiondecl functionName="multiCondition2" lineNumber="564"/>
    <functiondecl functionName="innerSmtString" lineNumber="781"/>
    <functiondecl functionName="oppositeInnerConditionError" lineNumber="793"/>
    <functiondecl functionName="identicalInnerConditionError" lineNumber="808"/>
    <functiondecl functionName="identicalConditionAfterEarlyExitError" lineNumber="823"/>
    <functiondecl functionName="invertOperatorForOperandSwap" lineNumber="851"/>
    <functiondecl functionName="checkFloatRelation" lineNumber="871"/>
    <functiondecl functionName="getvalue3 &lt; double &gt;" lineNumber="890"/>
    <functiondecl functionName="parseComparison" lineNumber="920"/>
    <functiondecl functionName="conditionString" lineNumber="970"/>
    <functiondecl functionName="conditionString" lineNumber="985"/>
    <functiondecl functionName="checkIncorrectLogicOperator" lineNumber="1007"/>
    <functiondecl functionName="incorrectLogicOperatorError" lineNumber="1183"/>
    <functiondecl functionName="redundantConditionError" lineNumber="1198"/>
    <functiondecl functionName="checkModuloAlwaysTrueFalse" lineNumber="1206"/>
    <functiondecl functionName="moduloAlwaysTrueFalseError" lineNumber="1234"/>
    <functiondecl functionName="countPar" lineNumber="1240"/>
    <functiondecl functionName="clarifyCondition" lineNumber="1258"/>
    <functiondecl functionName="clarifyConditionError" lineNumber="1299"/>
    <functiondecl functionName="alwaysTrueFalse" lineNumber="1322"/>
    <functiondecl functionName="alwaysTrueFalseError" lineNumber="1440"/>
    <functiondecl functionName="checkInvalidTestForOverflow" lineNumber="1453"/>
    <functiondecl functionName="invalidTestForOverflow" lineNumber="1504"/>
    <functiondecl functionName="checkPointerAdditionResultNotNull" lineNumber="1515"/>
    <functiondecl functionName="pointerAdditionResultNotNullError" lineNumber="1554"/>
    <functiondecl functionName="checkDuplicateConditionalAssign" lineNumber="1560"/>
    <functiondecl functionName="duplicateConditionalAssignError" lineNumber="1596"/>
    <functiondecl functionName="getvalue &lt; double &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; unsignedlong long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue &lt; long long &gt;" lineNumber="897"/>
    <functiondecl functionName="getvalue3 &lt; unsignedlong long &gt;" lineNumber="880"/>
    <functiondecl functionName="getvalue3 &lt; long long &gt;" lineNumber="880"/>
    <functioncall functionName="AFTER"/>
    <functioncall functionName="ARGVALUE"/>
    <functioncall functionName="AST"/>
    <functioncall functionName="AT_INDEX"/>
    <functioncall functionName="Address"/>
    <functioncall functionName="AllocFunc"/>
    <functioncall functionName="Argument"/>
    <functioncall functionName="ArgumentChecks"/>
    <functioncall functionName="BAD_ATTRIBUTE_VALUE"/>
    <functioncall functionName="BAD_XML"/>
    <functioncall functionName="BAILOUT"/>
    <functioncall functionName="BORLAND"/>
    <functioncall functionName="BREAK"/>
    <functioncall functionName="BUFFER"/>
    <functioncall functionName="BUFFER_NT"/>
    <functioncall functionName="BUFFER_SIZE"/>
    <functioncall functionName="Break"/>
    <functioncall functionName="C"/>
    <functioncall functionName="C11"/>
    <functioncall functionName="C89"/>
    <functioncall functionName="C99"/>
    <functioncall functionName="CHANGE"/>
    <functioncall functionName="CHANGE_CONTENT"/>
    <functioncall functionName="CHANGE_INTERNAL"/>
    <functioncall functionName="CLEAR"/>
    <functioncall functionName="CLOCKS_PER_SEC"/>
    <functioncall functionName="COMPILE_DB"/>
    <functioncall functionName="CONTAINER"/>
    <functioncall functionName="CONTAINER_SIZE"/>
    <functioncall functionName="CPP"/>
    <functioncall functionName="CPP03"/>
    <functioncall functionName="CPP11"/>
    <functioncall functionName="CPP14"/>
    <functioncall functionName="CPP17"/>
    <functioncall functionName="CPP20"/>
    <functioncall functionName="CPPCHECK_GUI"/>
    <functioncall functionName="CPPLatest"/>
    <functioncall functionName="CWE"/>
    <functioncall functionName="CWE398"/>
    <functioncall functionName="CWE570"/>
    <functioncall functionName="CWE571"/>
    <functioncall functionName="Check"/>
    <functioncall functionName="CheckCondition"/>
    <functioncall functionName="CodeBlock"/>
    <functioncall functionName="Container"/>
    <functioncall functionName="Continue"/>
    <functioncall functionName="DIR_IN"/>
    <functioncall functionName="DIR_INOUT"/>
    <functioncall functionName="DIR_OUT"/>
    <functioncall functionName="DIR_UNKNOWN"/>
    <functioncall functionName="DOUBLE"/>
    <functioncall functionName="DUPLICATE_PLATFORM_TYPE"/>
    <functioncall functionName="Dimension"/>
    <functioncall functionName="EMPTY"/>
    <functioncall functionName="END_ITERATOR"/>
    <functioncall functionName="ERASE"/>
    <functioncall functionName="ErrorLogger"/>
    <functioncall functionName="ErrorMessage"/>
    <functioncall functionName="ExportedFunctions"/>
    <functioncall functionName="FALLBACK1"/>
    <functioncall functionName="FALLBACK2"/>
    <functioncall functionName="FILE_NOT_FOUND"/>
    <functioncall functionName="FIND"/>
    <functioncall functionName="False"/>
    <functioncall functionName="FileLocation"/>
    <functioncall functionName="FileSettings"/>
    <functioncall functionName="ForwardedVariable"/>
    <functioncall functionName="FriendInfo"/>
    <functioncall functionName="Function"/>
    <functioncall functionName="Global"/>
    <functioncall functionName="HIGH"/>
    <functioncall functionName="ID"/>
    <functioncall functionName="INNER"/>
    <functioncall functionName="INSERT"/>
    <functioncall functionName="INSTANTIATION"/>
    <functioncall functionName="INT"/>
    <functioncall functionName="INTERNAL"/>
    <functioncall functionName="ITEM"/>
    <functioncall functionName="ITERATOR"/>
    <functioncall functionName="Inconclusive"/>
    <functioncall functionName="InternalError"/>
    <functioncall functionName="Iterator"/>
    <functioncall functionName="Known"/>
    <functioncall functionName="LIFETIME"/>
    <functioncall functionName="LIMIT"/>
    <functioncall functionName="LONGDOUBLE"/>
    <functioncall functionName="LOW"/>
    <functioncall functionName="Lambda"/>
    <functioncall functionName="Local"/>
    <functioncall functionName="MISSING"/>
    <functioncall functionName="MISSING_ATTRIBUTE"/>
    <functioncall functionName="MOVED"/>
    <functioncall functionName="MUL"/>
    <functioncall functionName="Match"/>
    <functioncall functionName="MinSize"/>
    <functioncall functionName="MovedVariable"/>
    <functioncall functionName="NOMATCH"/>
    <functioncall functionName="NONE"/>
    <functioncall functionName="NONSTD"/>
    <functioncall functionName="NO_ACTION"/>
    <functioncall functionName="NO_LINE"/>
    <functioncall functionName="NO_YIELD"/>
    <functioncall functionName="Namespace"/>
    <functioncall functionName="Native"/>
    <functioncall functionName="NonMovedVariable"/>
    <functioncall functionName="None"/>
    <functioncall functionName="OK"/>
    <functioncall functionName="Object"/>
    <functioncall functionName="PLATFORM_TYPE_REDEFINED"/>
    <functioncall functionName="POP"/>
    <functioncall functionName="PUSH"/>
    <functioncall functionName="PathAnalysis"/>
    <functioncall functionName="Platform"/>
    <functioncall functionName="PlatformFile"/>
    <functioncall functionName="PlatformType"/>
    <functioncall functionName="PodType"/>
    <functioncall functionName="Possible"/>
    <functioncall functionName="Private"/>
    <functioncall functionName="Protected"/>
    <functioncall functionName="Public"/>
    <functioncall functionName="READ"/>
    <functioncall functionName="RECORD"/>
    <functioncall functionName="RESIZE"/>
    <functioncall functionName="RETURN"/>
    <functioncall functionName="Reassign"/>
    <functioncall functionName="Result"/>
    <functioncall functionName="SAME"/>
    <functioncall functionName="SHOWTIME_FILE"/>
    <functioncall functionName="SHOWTIME_SUMMARY"/>
    <functioncall functionName="SHOWTIME_TOP5"/>
    <functioncall functionName="SIGNED"/>
    <functioncall functionName="SIZE"/>
    <functioncall functionName="SIZEOF"/>
    <functioncall functionName="START_ITERATOR"/>
    <functioncall functionName="STRLEN"/>
    <functioncall functionName="STYLE"/>
    <functioncall functionName="SYNTAX"/>
    <functioncall functionName="Scope"/>
    <functioncall functionName="ScopeInfo2"/>
    <functioncall functionName="Standards"/>
    <functioncall functionName="Suppression"/>
    <functioncall functionName="TOK"/>
    <functioncall functionName="Throw"/>
    <functioncall functionName="TimerResultsData"/>
    <functioncall functionName="Token"/>
    <functioncall functionName="TokenAndName"/>
    <functioncall functionName="TokenImpl"/>
    <functioncall functionName="Tokenizer"/>
    <functioncall functionName="True"/>
    <functioncall functionName="Type"/>
    <functioncall functionName="UNINIT"/>
    <functioncall functionName="UNKNOWN"/>
    <functioncall functionName="UNKNOWN_ELEMENT"/>
    <functioncall functionName="UNKNOWN_INT"/>
    <functioncall functionName="UNKNOWN_MACRO"/>
    <functioncall functionName="UNKNOWN_SIGN"/>
    <functioncall functionName="UNKNOWN_TYPE"/>
    <functioncall functionName="UNSIGNED"/>
    <functioncall functionName="UNSUPPORTED_FORMAT"/>
    <functioncall functionName="Unix32"/>
    <functioncall functionName="Unix64"/>
    <functioncall functionName="Unknown"/>
    <functioncall functionName="Unspecified"/>
    <functioncall functionName="UnusedValue"/>
    <functioncall functionName="VALUE"/>
    <functioncall functionName="VS_SLN"/>
    <functioncall functionName="VS_VCXPROJ"/>
    <functioncall functionName="Value"/>
    <functioncall functionName="ValueFlow"/>
    <functioncall functionName="ValueType"/>
    <functioncall functionName="WARNING"/>
    <functioncall functionName="WCHAR_T"/>
    <functioncall functionName="WRITE"/>
    <functioncall functionName="WarnInfo"/>
    <functioncall functionName="Win32A"/>
    <functioncall functionName="Win32W"/>
    <functioncall functionName="Win64"/>
    <functioncall functionName="_const_ptr"/>
    <functioncall functionName="_long"/>
    <functioncall functionName="_pointer"/>
    <functioncall functionName="_ptr_ptr"/>
    <functioncall functionName="_signed"/>
    <functioncall functionName="_unsigned"/>
    <functioncall functionName="a"/>
    <functioncall functionName="ac"/>
    <functioncall functionName="access"/>
    <functioncall functionName="access_"/>
    <functioncall functionName="action"/>
    <functioncall functionName="always"/>
    <functioncall functionName="alwaysTrue"/>
    <functioncall functionName="alwaysTrueFalse"/>
    <functioncall functionName="alwaysTrueFalseError"/>
    <functioncall functionName="aname"/>
    <functioncall functionName="any_of"/>
    <functioncall functionName="arg"/>
    <functioncall functionName="arg2"/>
    <functioncall functionName="argnr"/>
    <functioncall functionName="argumentNumber"/>
    <functioncall functionName="arrayLike_indexOp"/>
    <functioncall functionName="assertFound"/>
    <functioncall functionName="assign"/>
    <functioncall functionName="assignIf"/>
    <functioncall functionName="assignIfError"/>
    <functioncall functionName="assignIfParseScope"/>
    <functioncall functionName="assignTok"/>
    <functioncall functionName="astIsFloat"/>
    <functioncall functionName="astOperand1"/>
    <functioncall functionName="astOperand2"/>
    <functioncall functionName="astParent"/>
    <functioncall functionName="astString"/>
    <functioncall functionName="astTop"/>
    <functioncall functionName="at"/>
    <functioncall functionName="b"/>
    <functioncall functionName="back"/>
    <functioncall functionName="badBitmaskCheckError"/>
    <functioncall functionName="bailout"/>
    <functioncall functionName="begin"/>
    <functioncall functionName="bitop"/>
    <functioncall functionName="bits"/>
    <functioncall functionName="blockName"/>
    <functioncall functionName="bodyEnd"/>
    <functioncall functionName="bodyEnd_"/>
    <functioncall functionName="bodyStart"/>
    <functioncall functionName="bool"/>
    <functioncall functionName="boolop"/>
    <functioncall functionName="break"/>
    <functioncall functionName="bug"/>
    <functioncall functionName="c"/>
    <functioncall functionName="calcToken"/>
    <functioncall functionName="calloc"/>
    <functioncall functionName="callstack"/>
    <functioncall functionName="caseInsensitiveStringCompare"/>
    <functioncall functionName="changed"/>
    <functioncall functionName="char"/>
    <functioncall functionName="char_bit"/>
    <functioncall functionName="checkBadBitmaskCheck"/>
    <functioncall functionName="checkCondition"/>
    <functioncall functionName="checkDuplicateConditionalAssign"/>
    <functioncall functionName="checkFloatRelation"/>
    <functioncall functionName="checkIncorrectLogicOperator"/>
    <functioncall functionName="checkIntRelation"/>
    <functioncall functionName="checkInvalidTestForOverflow"/>
    <functioncall functionName="checkModuloAlwaysTrueFalse"/>
    <functioncall functionName="checkPointerAdditionResultNotNull"/>
    <functioncall functionName="clarifyCondition"/>
    <functioncall functionName="clarifyConditionError"/>
    <functioncall functionName="classDef"/>
    <functioncall functionName="classDef_"/>
    <functioncall functionName="classScope"/>
    <functioncall functionName="classScope_"/>
    <functioncall functionName="classes"/>
    <functioncall functionName="close"/>
    <functioncall functionName="column"/>
    <functioncall functionName="comp"/>
    <functioncall functionName="comp1"/>
    <functioncall functionName="comp2"/>
    <functioncall functionName="compare"/>
    <functioncall functionName="comparison"/>
    <functioncall functionName="comparisonError"/>
    <functioncall functionName="cond"/>
    <functioncall functionName="cond1"/>
    <functioncall functionName="cond2"/>
    <functioncall functionName="cond2str"/>
    <functioncall functionName="condEndToken"/>
    <functioncall functionName="condStartToken"/>
    <functioncall functionName="condTok"/>
    <functioncall functionName="condition"/>
    <functioncall functionName="conditionString"/>
    <functioncall functionName="conditional"/>
    <functioncall functionName="const"/>
    <functioncall functionName="const_cast"/>
    <functioncall functionName="constness"/>
    <functioncall functionName="container"/>
    <functioncall functionName="containerTypeToken"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="countPar"/>
    <functioncall functionName="cpp"/>
    <functioncall functionName="ctu"/>
    <functioncall functionName="cwe"/>
    <functioncall functionName="d1"/>
    <functioncall functionName="d2"/>
    <functioncall functionName="debug"/>
    <functioncall functionName="declarationId"/>
    <functioncall functionName="default"/>
    <functioncall functionName="defaultArg"/>
    <functioncall functionName="delete"/>
    <functioncall functionName="diag"/>
    <functioncall functionName="direction"/>
    <functioncall functionName="done"/>
    <functioncall functionName="double"/>
    <functioncall functionName="duplicateCondition"/>
    <functioncall functionName="duplicateConditionError"/>
    <functioncall functionName="duplicateConditionalAssignError"/>
    <functioncall functionName="e"/>
    <functioncall functionName="eArithmeticalOp"/>
    <functioncall functionName="eAssignmentOp"/>
    <functioncall functionName="eBitOp"/>
    <functioncall functionName="eBoolean"/>
    <functioncall functionName="eBracket"/>
    <functioncall functionName="eCatch"/>
    <functioncall functionName="eChar"/>
    <functioncall functionName="eClass"/>
    <functioncall functionName="eComparisonOp"/>
    <functioncall functionName="eConstructor"/>
    <functioncall functionName="eCopyConstructor"/>
    <functioncall functionName="eDestructor"/>
    <functioncall functionName="eDo"/>
    <functioncall functionName="eElse"/>
    <functioncall functionName="eEnum"/>
    <functioncall functionName="eEnumerator"/>
    <functioncall functionName="eExtendedOp"/>
    <functioncall functionName="eFor"/>
    <functioncall functionName="eFunction"/>
    <functioncall functionName="eGlobal"/>
    <functioncall functionName="eIf"/>
    <functioncall functionName="eIncDecOp"/>
    <functioncall functionName="eKeyword"/>
    <functioncall functionName="eLambda"/>
    <functioncall functionName="eLiteral"/>
    <functioncall functionName="eLogicalOp"/>
    <functioncall functionName="eMoveConstructor"/>
    <functioncall functionName="eName"/>
    <functioncall functionName="eNamespace"/>
    <functioncall functionName="eNone"/>
    <functioncall functionName="eNumber"/>
    <functioncall functionName="eOperatorEqual"/>
    <functioncall functionName="eOther"/>
    <functioncall functionName="eString"/>
    <functioncall functionName="eStruct"/>
    <functioncall functionName="eSwitch"/>
    <functioncall functionName="eTry"/>
    <functioncall functionName="eType"/>
    <functioncall functionName="eUnconditional"/>
    <functioncall functionName="eUnion"/>
    <functioncall functionName="eVariable"/>
    <functioncall functionName="eWhile"/>
    <functioncall functionName="elseIfCond"/>
    <functioncall functionName="emplace_back"/>
    <functioncall functionName="empty"/>
    <functioncall functionName="emptyString"/>
    <functioncall functionName="enclosingScope"/>
    <functioncall functionName="enclosingScope_"/>
    <functioncall functionName="end"/>
    <functioncall functionName="end_"/>
    <functioncall functionName="endlen"/>
    <functioncall functionName="enumerator"/>
    <functioncall functionName="errmsg"/>
    <functioncall functionName="error"/>
    <functioncall functionName="errorId"/>
    <functioncall functionName="errorLogger"/>
    <functioncall functionName="errorPath"/>
    <functioncall functionName="errorcode"/>
    <functioncall functionName="errors"/>
    <functioncall functionName="errtok"/>
    <functioncall functionName="evaluate"/>
    <functioncall functionName="expr"/>
    <functioncall functionName="expr1"/>
    <functioncall functionName="expr2"/>
    <functioncall functionName="expr3"/>
    <functioncall functionName="expr3VerboseMsg"/>
    <functioncall functionName="exprToken"/>
    <functioncall functionName="expressionString"/>
    <functioncall functionName="externalFunctions"/>
    <functioncall functionName="externalVariables"/>
    <functioncall functionName="fAtAddress"/>
    <functioncall functionName="fConstexpr"/>
    <functioncall functionName="fFamilyMask"/>
    <functioncall functionName="fHasBody"/>
    <functioncall functionName="fHasDefault"/>
    <functioncall functionName="fHasFinalSpecifier"/>
    <functioncall functionName="fHasLvalRefQual"/>
    <functioncall functionName="fHasOverrideSpecifier"/>
    <functioncall functionName="fHasRvalRefQual"/>
    <functioncall functionName="fHasTrailingReturnType"/>
    <functioncall functionName="fHasVirtualSpecifier"/>
    <functioncall functionName="fIncompleteVar"/>
    <functioncall functionName="fIsAlias"/>
    <functioncall functionName="fIsArray"/>
    <functioncall functionName="fIsAttributeConst"/>
    <functioncall functionName="fIsAttributeConstructor"/>
    <functioncall functionName="fIsAttributeDestructor"/>
    <functioncall functionName="fIsAttributeNodiscard"/>
    <functioncall functionName="fIsAttributeNoreturn"/>
    <functioncall functionName="fIsAttributeNothrow"/>
    <functioncall functionName="fIsAttributePacked"/>
    <functioncall functionName="fIsAttributePure"/>
    <functioncall functionName="fIsAttributeUnused"/>
    <functioncall functionName="fIsAttributeUsed"/>
    <functioncall functionName="fIsCast"/>
    <functioncall functionName="fIsClass"/>
    <functioncall functionName="fIsComplex"/>
    <functioncall functionName="fIsConst"/>
    <functioncall functionName="fIsControlFlowKeyword"/>
    <functioncall functionName="fIsDefault"/>
    <functioncall functionName="fIsDelete"/>
    <functioncall functionName="fIsEnumType"/>
    <functioncall functionName="fIsEscapeFunction"/>
    <functioncall functionName="fIsExpandedMacro"/>
    <functioncall functionName="fIsExplicit"/>
    <functioncall functionName="fIsExtern"/>
    <functioncall functionName="fIsFloatType"/>
    <functioncall functionName="fIsForwardDeclaration"/>
    <functioncall functionName="fIsFriend"/>
    <functioncall functionName="fIsFunction"/>
    <functioncall functionName="fIsInline"/>
    <functioncall functionName="fIsLiteral"/>
    <functioncall functionName="fIsLong"/>
    <functioncall functionName="fIsMutable"/>
    <functioncall functionName="fIsName"/>
    <functioncall functionName="fIsNoExcept"/>
    <functioncall functionName="fIsOperator"/>
    <functioncall functionName="fIsOperatorKeyword"/>
    <functioncall functionName="fIsPartialSpecialization"/>
    <functioncall functionName="fIsPointer"/>
    <functioncall functionName="fIsPointerCompare"/>
    <functioncall functionName="fIsPure"/>
    <functioncall functionName="fIsRValueRef"/>
    <functioncall functionName="fIsReference"/>
    <functioncall functionName="fIsSigned"/>
    <functioncall functionName="fIsSmartPointer"/>
    <functioncall functionName="fIsSpecialization"/>
    <functioncall functionName="fIsStandardType"/>
    <functioncall functionName="fIsStatic"/>
    <functioncall functionName="fIsStaticLocal"/>
    <functioncall functionName="fIsStlString"/>
    <functioncall functionName="fIsStlType"/>
    <functioncall functionName="fIsTemplateArg"/>
    <functioncall functionName="fIsThrow"/>
    <functioncall functionName="fIsUnsigned"/>
    <functioncall functionName="fIsVariable"/>
    <functioncall functionName="fIsVariadic"/>
    <functioncall functionName="fIsVolatile"/>
    <functioncall functionName="false"/>
    <functioncall functionName="file"/>
    <functioncall functionName="fileIndex"/>
    <functioncall functionName="fileInfo"/>
    <functioncall functionName="fileName"/>
    <functioncall functionName="filename"/>
    <functioncall functionName="find"/>
    <functioncall functionName="findRecordInNestedList"/>
    <functioncall functionName="findScope"/>
    <functioncall functionName="findType"/>
    <functioncall functionName="find_first_of"/>
    <functioncall functionName="find_if"/>
    <functioncall functionName="findmatch"/>
    <functioncall functionName="findsimplematch"/>
    <functioncall functionName="first"/>
    <functioncall functionName="firstCondition"/>
    <functioncall functionName="flag"/>
    <functioncall functionName="flag_"/>
    <functioncall functionName="flags_"/>
    <functioncall functionName="float"/>
    <functioncall functionName="floatValue"/>
    <functioncall functionName="for"/>
    <functioncall functionName="formatstr"/>
    <functioncall functionName="formatstr_scan"/>
    <functioncall functionName="formatstr_secure"/>
    <functioncall functionName="forward"/>
    <functioncall functionName="front"/>
    <functioncall functionName="ftok"/>
    <functioncall functionName="func"/>
    <functioncall functionName="funcname"/>
    <functioncall functionName="function"/>
    <functioncall functionName="functionScopes"/>
    <functioncall functionName="functionname"/>
    <functioncall functionName="getAllocDealloc"/>
    <functioncall functionName="getArgumentVar"/>
    <functioncall functionName="getCppcheckAttribute"/>
    <functioncall functionName="getErrorPath"/>
    <functioncall functionName="getFlag"/>
    <functioncall functionName="getSymbolDatabase"/>
    <functioncall functionName="getValue"/>
    <functioncall functionName="getarg"/>
    <functioncall functionName="getnumchildren"/>
    <functioncall functionName="getvalue &lt; double &gt;"/>
    <functioncall functionName="getvalue &lt; long long &gt;"/>
    <functioncall functionName="getvalue &lt; unsignedlong long &gt;"/>
    <functioncall functionName="getvalue3 &lt; double &gt;"/>
    <functioncall functionName="getvalue3 &lt; long long &gt;"/>
    <functioncall functionName="getvalue3 &lt; unsignedlong long &gt;"/>
    <functioncall functionName="groupId"/>
    <functioncall functionName="hasKnownIntValue"/>
    <functioncall functionName="hasTrailingReturnType"/>
    <functioncall functionName="i"/>
    <functioncall functionName="i1"/>
    <functioncall functionName="i2"/>
    <functioncall functionName="id"/>
    <functioncall functionName="identicalConditionAfterEarlyExitError"/>
    <functioncall functionName="identicalInnerConditionError"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ifCond"/>
    <functioncall functionName="ignore"/>
    <functioncall functionName="inBooleanFunction"/>
    <functioncall functionName="inconclusive"/>
    <functioncall functionName="incorrectLogicOperatorError"/>
    <functioncall functionName="index"/>
    <functioncall functionName="indexOfFile"/>
    <functioncall functionName="index_"/>
    <functioncall functionName="indirect"/>
    <functioncall functionName="info"/>
    <functioncall functionName="information"/>
    <functioncall functionName="initArgCount"/>
    <functioncall functionName="innerSmtString"/>
    <functioncall functionName="insert"/>
    <functioncall functionName="instances"/>
    <functioncall functionName="int"/>
    <functioncall functionName="int_bit"/>
    <functioncall functionName="internalFunctions"/>
    <functioncall functionName="intvalue"/>
    <functioncall functionName="invalidTestForOverflow"/>
    <functioncall functionName="invertOperatorForOperandSwap"/>
    <functioncall functionName="isAliased"/>
    <functioncall functionName="isArgument"/>
    <functioncall functionName="isArithmeticalOp"/>
    <functioncall functionName="isAssignmentOp"/>
    <functioncall functionName="isAttributeConst"/>
    <functioncall functionName="isAttributeConstructor"/>
    <functioncall functionName="isAttributeDestructor"/>
    <functioncall functionName="isAttributeNodiscard"/>
    <functioncall functionName="isAttributeNoreturn"/>
    <functioncall functionName="isAttributeNothrow"/>
    <functioncall functionName="isAttributePure"/>
    <functioncall functionName="isC"/>
    <functioncall functionName="isCPP"/>
    <functioncall functionName="isComparisonOp"/>
    <functioncall functionName="isConst"/>
    <functioncall functionName="isConstOp"/>
    <functioncall functionName="isConstVarExpression"/>
    <functioncall functionName="isConstexpr"/>
    <functioncall functionName="isContainerSizeValue"/>
    <functioncall functionName="isEnabled"/>
    <functioncall functionName="isEnumType"/>
    <functioncall functionName="isExpandedMacro"/>
    <functioncall functionName="isExtern"/>
    <functioncall functionName="isFloat"/>
    <functioncall functionName="isFunctionConst"/>
    <functioncall functionName="isInt"/>
    <functioncall functionName="isIntValue"/>
    <functioncall functionName="isIntegral"/>
    <functioncall functionName="isKnown"/>
    <functioncall functionName="isLessEqual"/>
    <functioncall functionName="isLifetimeValue"/>
    <functioncall functionName="isLikelyStreamRead"/>
    <functioncall functionName="isLiteral"/>
    <functioncall functionName="isLocal"/>
    <functioncall functionName="isMovedValue"/>
    <functioncall functionName="isName"/>
    <functioncall functionName="isNegative"/>
    <functioncall functionName="isNonConstFunctionCall"/>
    <functioncall functionName="isNumber"/>
    <functioncall functionName="isOppositeCond"/>
    <functioncall functionName="isOverlappingCond"/>
    <functioncall functionName="isParameterChanged"/>
    <functioncall functionName="isPointer"/>
    <functioncall functionName="isPositive"/>
    <functioncall functionName="isPrefix"/>
    <functioncall functionName="isReference"/>
    <functioncall functionName="isSameExpression"/>
    <functioncall functionName="isStandardType"/>
    <functioncall functionName="isStlType"/>
    <functioncall functionName="isSuffix"/>
    <functioncall functionName="isUnaryOp"/>
    <functioncall functionName="isUninitValue"/>
    <functioncall functionName="isVariableChanged"/>
    <functioncall functionName="isVirtual"/>
    <functioncall functionName="is_open"/>
    <functioncall functionName="isconst"/>
    <functioncall functionName="isfloat"/>
    <functioncall functionName="islocal"/>
    <functioncall functionName="ispure"/>
    <functioncall functionName="it"/>
    <functioncall functionName="iteratorInfo"/>
    <functioncall functionName="known"/>
    <functioncall functionName="kwd"/>
    <functioncall functionName="last"/>
    <functioncall functionName="leakignore"/>
    <functioncall functionName="length"/>
    <functioncall functionName="lhs"/>
    <functioncall functionName="library"/>
    <functioncall functionName="lifetimeKind"/>
    <functioncall functionName="lifetimeScope"/>
    <functioncall functionName="line"/>
    <functioncall functionName="lineNumber"/>
    <functioncall functionName="linenr"/>
    <functioncall functionName="link"/>
    <functioncall functionName="linkAt"/>
    <functioncall functionName="linkToToken"/>
    <functioncall functionName="list"/>
    <functioncall functionName="locations"/>
    <functioncall functionName="long"/>
    <functioncall functionName="long_bit"/>
    <functioncall functionName="lowest"/>
    <functioncall functionName="m"/>
    <functioncall functionName="mAccess"/>
    <functioncall functionName="mAlloc"/>
    <functioncall functionName="mAstOperand1"/>
    <functioncall functionName="mAstOperand2"/>
    <functioncall functionName="mAstParent"/>
    <functioncall functionName="mBits"/>
    <functioncall functionName="mClocks"/>
    <functioncall functionName="mColumn"/>
    <functioncall functionName="mCpp"/>
    <functioncall functionName="mCppcheckAttributes"/>
    <functioncall functionName="mDealloc"/>
    <functioncall functionName="mDoubleValue"/>
    <functioncall functionName="mEmptyValueList"/>
    <functioncall functionName="mEnumerator"/>
    <functioncall functionName="mErrorLogger"/>
    <functioncall functionName="mFileIndex"/>
    <functioncall functionName="mFileName"/>
    <functioncall functionName="mFlags"/>
    <functioncall functionName="mFunction"/>
    <functioncall functionName="mIndex"/>
    <functioncall functionName="mInfo"/>
    <functioncall functionName="mIntValue"/>
    <functioncall functionName="mLibrary"/>
    <functioncall functionName="mLineNumber"/>
    <functioncall functionName="mName"/>
    <functioncall functionName="mNameToken"/>
    <functioncall functionName="mNumberOfResults"/>
    <functioncall functionName="mOffset"/>
    <functioncall functionName="mOrigFileName"/>
    <functioncall functionName="mOriginalName"/>
    <functioncall functionName="mProgressValue"/>
    <functioncall functionName="mScope"/>
    <functioncall functionName="mScopeInfo"/>
    <functioncall functionName="mSettings"/>
    <functioncall functionName="mStr"/>
    <functioncall functionName="mTemplateSimplifierPointers"/>
    <functioncall functionName="mTokenizer"/>
    <functioncall functionName="mType"/>
    <functioncall functionName="mTypeEndToken"/>
    <functioncall functionName="mTypeStartToken"/>
    <functioncall functionName="mValueFlowKnown"/>
    <functioncall functionName="mValueType"/>
    <functioncall functionName="mValues"/>
    <functioncall functionName="mVarId"/>
    <functioncall functionName="mVariable"/>
    <functioncall functionName="mWhat"/>
    <functioncall functionName="make_pair"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="matched"/>
    <functioncall functionName="max"/>
    <functioncall functionName="max_value"/>
    <functioncall functionName="mem_fn"/>
    <functioncall functionName="memoizedIsLiteral"/>
    <functioncall functionName="memoizedIsName"/>
    <functioncall functionName="min"/>
    <functioncall functionName="min_value"/>
    <functioncall functionName="minsizes"/>
    <functioncall functionName="mismatchingBitAndError"/>
    <functioncall functionName="moduloAlwaysTrueFalseError"/>
    <functioncall functionName="moveKind"/>
    <functioncall functionName="msc"/>
    <functioncall functionName="msg"/>
    <functioncall functionName="multiCondition"/>
    <functioncall functionName="multiCondition2"/>
    <functioncall functionName="myName"/>
    <functioncall functionName="name"/>
    <functioncall functionName="nameEnd"/>
    <functioncall functionName="nameStart"/>
    <functioncall functionName="nameTok"/>
    <functioncall functionName="nameToken"/>
    <functioncall functionName="name_"/>
    <functioncall functionName="needInitialization"/>
    <functioncall functionName="nestedIn"/>
    <functioncall functionName="next"/>
    <functioncall functionName="nextAfterAstRightmostLeaf"/>
    <functioncall functionName="nextToken"/>
    <functioncall functionName="nonConstFunctionCall"/>
    <functioncall functionName="none"/>
    <functioncall functionName="nonlocal"/>
    <functioncall functionName="noreturn"/>
    <functioncall functionName="not1"/>
    <functioncall functionName="not2"/>
    <functioncall functionName="not_"/>
    <functioncall functionName="notbool"/>
    <functioncall functionName="notnull"/>
    <functioncall functionName="notuninit"/>
    <functioncall functionName="nullptr"/>
    <functioncall functionName="num"/>
    <functioncall functionName="num1"/>
    <functioncall functionName="num2"/>
    <functioncall functionName="numbers"/>
    <functioncall functionName="numchildren"/>
    <functioncall functionName="o"/>
    <functioncall functionName="obj"/>
    <functioncall functionName="op"/>
    <functioncall functionName="op1"/>
    <functioncall functionName="op1_and_op2"/>
    <functioncall functionName="op2"/>
    <functioncall functionName="opLessAllowed"/>
    <functioncall functionName="oppositeElseIfConditionError"/>
    <functioncall functionName="oppositeInnerConditionError"/>
    <functioncall functionName="optional"/>
    <functioncall functionName="originalTypeName"/>
    <functioncall functionName="other"/>
    <functioncall functionName="otn"/>
    <functioncall functionName="outer"/>
    <functioncall functionName="overlappingElseIfConditionError"/>
    <functioncall functionName="override"/>
    <functioncall functionName="p"/>
    <functioncall functionName="pair"/>
    <functioncall functionName="par"/>
    <functioncall functionName="parent"/>
    <functioncall functionName="parseComparison"/>
    <functioncall functionName="parseable"/>
    <functioncall functionName="partok"/>
    <functioncall functionName="pattern"/>
    <functioncall functionName="performance"/>
    <functioncall functionName="platform"/>
    <functioncall functionName="platformString"/>
    <functioncall functionName="platformType"/>
    <functioncall functionName="platform_type"/>
    <functioncall functionName="plistFooter"/>
    <functioncall functionName="pointer"/>
    <functioncall functionName="pointerAdditionResultNotNullError"/>
    <functioncall functionName="pop"/>
    <functioncall functionName="portability"/>
    <functioncall functionName="pred"/>
    <functioncall functionName="prefix"/>
    <functioncall functionName="previous"/>
    <functioncall functionName="previousToken"/>
    <functioncall functionName="printInconclusive"/>
    <functioncall functionName="printStyle"/>
    <functioncall functionName="pt"/>
    <functioncall functionName="pure"/>
    <functioncall functionName="push"/>
    <functioncall functionName="push_back"/>
    <functioncall functionName="r"/>
    <functioncall functionName="reallocArg"/>
    <functioncall functionName="reason"/>
    <functioncall functionName="redundantConditionError"/>
    <functioncall functionName="remove"/>
    <functioncall functionName="reportErr"/>
    <functioncall functionName="reportError"/>
    <functioncall functionName="result"/>
    <functioncall functionName="result1"/>
    <functioncall functionName="result2"/>
    <functioncall functionName="ret"/>
    <functioncall functionName="retDef"/>
    <functioncall functionName="return"/>
    <functioncall functionName="rhs"/>
    <functioncall functionName="s"/>
    <functioncall functionName="s1"/>
    <functioncall functionName="s2"/>
    <functioncall functionName="safe"/>
    <functioncall functionName="scope"/>
    <functioncall functionName="scopeList"/>
    <functioncall functionName="scope_"/>
    <functioncall functionName="second"/>
    <functioncall functionName="secondCondition"/>
    <functioncall functionName="sep"/>
    <functioncall functionName="setCppcheckAttribute"/>
    <functioncall functionName="setFlag"/>
    <functioncall functionName="setSettings"/>
    <functioncall functionName="settings"/>
    <functioncall functionName="severity"/>
    <functioncall functionName="short"/>
    <functioncall functionName="sign"/>
    <functioncall functionName="simpleMatch"/>
    <functioncall functionName="size"/>
    <functioncall functionName="size_templateArgNo"/>
    <functioncall functionName="smartPointerType"/>
    <functioncall functionName="stage"/>
    <functioncall functionName="start"/>
    <functioncall functionName="startScope"/>
    <functioncall functionName="startTok"/>
    <functioncall functionName="start_"/>
    <functioncall functionName="state"/>
    <functioncall functionName="stdAssociativeLike"/>
    <functioncall functionName="stdStringLike"/>
    <functioncall functionName="str"/>
    <functioncall functionName="strAt"/>
    <functioncall functionName="strdup"/>
    <functioncall functionName="stricmp"/>
    <functioncall functionName="string"/>
    <functioncall functionName="strz"/>
    <functioncall functionName="style"/>
    <functioncall functionName="suffix"/>
    <functioncall functionName="swap"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="symbolName"/>
    <functioncall functionName="t"/>
    <functioncall functionName="termToken"/>
    <functioncall functionName="test"/>
    <functioncall functionName="testvalue"/>
    <functioncall functionName="text"/>
    <functioncall functionName="this"/>
    <functioncall functionName="time"/>
    <functioncall functionName="toDoubleNumber"/>
    <functioncall functionName="toLongNumber"/>
    <functioncall functionName="toString"/>
    <functioncall functionName="tok"/>
    <functioncall functionName="tok1"/>
    <functioncall functionName="tok2"/>
    <functioncall functionName="tokAt"/>
    <functioncall functionName="tokType"/>
    <functioncall functionName="token"/>
    <functioncall functionName="tokenAndName"/>
    <functioncall functionName="token_"/>
    <functioncall functionName="tokenizer"/>
    <functioncall functionName="tokenlist"/>
    <functioncall functionName="tokens"/>
    <functioncall functionName="tokvalue"/>
    <functioncall functionName="top"/>
    <functioncall functionName="toupper"/>
    <functioncall functionName="tr"/>
    <functioncall functionName="true"/>
    <functioncall functionName="type"/>
    <functioncall functionName="typeEnd"/>
    <functioncall functionName="typeScope"/>
    <functioncall functionName="typeStart"/>
    <functioncall functionName="typeStartToken"/>
    <functioncall functionName="type_"/>
    <functioncall functionName="type_templateArgNo"/>
    <functioncall functionName="types"/>
    <functioncall functionName="u1"/>
    <functioncall functionName="u2"/>
    <functioncall functionName="unused"/>
    <functioncall functionName="update_property_info"/>
    <functioncall functionName="use"/>
    <functioncall functionName="useMfc"/>
    <functioncall functionName="useUnsignedInt"/>
    <functioncall functionName="useretval"/>
    <functioncall functionName="usingNamespaces"/>
    <functioncall functionName="usingNamespaces_"/>
    <functioncall functionName="v"/>
    <functioncall functionName="val"/>
    <functioncall functionName="valid"/>
    <functioncall functionName="value"/>
    <functioncall functionName="value1"/>
    <functioncall functionName="value2"/>
    <functioncall functionName="valueKind"/>
    <functioncall functionName="valueType"/>
    <functioncall functionName="value_known"/>
    <functioncall functionName="values"/>
    <functioncall functionName="varId"/>
    <functioncall functionName="variable"/>
    <functioncall functionName="variadic"/>
    <functioncall functionName="varid"/>
    <functioncall functionName="varname"/>
    <functioncall functionName="vars"/>
    <functioncall functionName="varvalue"/>
    <functioncall functionName="visitAstNodes"/>
    <functioncall functionName="void"/>
    <functioncall functionName="warning"/>
    <functioncall functionName="while"/>
    <functioncall functionName="xmlElement"/>
    <functioncall functionName="yield"/>
  </FileInfo>
</analyzerinfo>
